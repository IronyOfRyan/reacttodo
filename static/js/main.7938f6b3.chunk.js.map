{"version":3,"sources":["reducers/todos.js","actions/actionTypes.js","actions/index.js","reducers/visibilityFilter.js","reducers/index.js","component/FormContent.jsx","component/TodoForm.jsx","component/TodoButtons.jsx","component/TodoItem.jsx","component/ClearSelected.jsx","component/Link.jsx","containers/FilterLink.js","component/Filters.jsx","component/TodoApp.jsx","containers/VisibleTodoList.js","component/App.jsx","containers/App.jsx","index.js","localStorage.js"],"names":["INIT_STATE","items","todosReducer","state","arguments","length","undefined","action","type","id","uuid","todoItem","task","isCompleted","Object","objectSpread","concat","toConsumableArray","filter","_ref","map","item","find","_ref2","editingTodo","modifiedTodo","checked","VisibilityFilters","SHOW_ALL","visibilityFilter","combineReducers","todos","TodosReducer","FormContent","handleChange","e","_this","setState","target","value","handleSubmit","preventDefault","truncatedTask","slice","props","handleAddTodo","react_default","a","createElement","onSubmit","this","className","index_es","htmlFor","style","margin","backgroundColor","onChange","placeholder","required","color","Add_default","marginRight","Component","TodoForm","todoVal","componentDidMount","window","addEventListener","handleKeyUp","ev","code","handleEditCancel","handleEditAndResetForm","handleSaveEdit","key","borderRadius","marginLeft","marginBottom","width","name","autoFocus","variant","disabled","icons_index_es","fontSize","onClick","TodoItem","handleSelectEditTodo","handleDeleteTodo","displayButtons","setDisplayButtons","bool","_this2","onMouseEnter","onMouseLeave","handleTodoToggle","primary","textDecoration","opacity","TodoButtons","ClearButton","someOrAll","Button_default","handleClearChecked","Link","active","children","connect","ownProps","dispatch","Filters","FilterLink","TodoApp","FormContent_FormContent","height","component_Filters","ClearSelected","component_TodoForm","TodoItem_TodoItem","defaultProps","getVisibleTodos","t","Error","styles","textAlign","background","position","bottom","border","boxShadow","AppLayout","VisibleTodoList","open","App","itemValue","selectedItemId","modifiedItem","src_component_App","mapDispatchToProps","payload","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","console","log","saveState","getState","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"8QA8BMA,EAAa,CACfC,MAAO,IAqGIC,EAlGM,WAAgC,IAA/BC,EAA+BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvBJ,EAAYO,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAQC,EAAOC,MAEX,ICrCgB,WDuCR,IAAMC,EAAKC,MACLC,EAAW,CACbC,KAAML,EAAOK,KACbH,KACAI,aAAa,GAEjB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAX,EADP,CAEIF,MAAK,GAAAe,OAAAF,OAAAG,EAAA,EAAAH,CAAMX,EAAMF,OAAZ,CAAmBU,MAIpC,IClDmB,cDoDX,IAAMV,EAAQE,EAAMF,MAAMiB,OAAO,SAAAC,GAAA,OAAAA,EAC7BV,KACSF,EAAOE,KACpB,OAAOK,OAAAC,EAAA,EAAAD,CAAA,GACAX,EADP,CAEIF,UAIZ,IC5DmB,cD8DX,IAAMA,EAAQE,EAAMF,MAAMmB,IAAI,SAAAC,GAI1B,OAHIA,EAAKZ,KAAOF,EAAOE,KACnBY,EAAKR,aAAeQ,EAAKR,aAEtBQ,IAEX,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAX,EADP,CAEIF,UAIZ,ICzEiB,YD2ET,IAAMoB,EAAOlB,EAAMF,MAAMqB,KAAK,SAAAC,GAAA,OAAAA,EAC1Bd,KACSF,EAAOE,KACpB,OAAOK,OAAAC,EAAA,EAAAD,CAAA,GACAX,EADP,CAEIqB,YAAaH,IAIzB,ICnFwB,mBDqFhB,IAAMpB,EAAQE,EAAMF,MAAMmB,IAAI,SAAAC,GAK1B,OAJIA,EAAKZ,KAAOF,EAAOkB,aAAahB,KAChCY,EAAKT,KAAOL,EAAOkB,aAAab,MAG7BS,IAGX,OAAOP,OAAAC,EAAA,EAAAD,CAAA,GACAX,EADP,CAEIF,QACAuB,YAAa,KAIzB,ICnGwB,mBD2GhB,OANiBrB,EAAMF,MAAMI,OAAZS,OAAAC,EAAA,EAAAD,CAAA,GACVX,EADU,CAEbqB,YAAa,KAFAV,OAAAC,EAAA,EAAAD,CAAA,GAINX,GAMnB,IC9GuB,kBDgHf,IAAMF,EAAQE,EAAMF,MAAMiB,OAAO,SAAAG,GAAI,OAAIA,EAAKR,cAAgBN,EAAOmB,UACrE,OAAOZ,OAAAC,EAAA,EAAAD,CAAA,GACAX,EADP,CAEIF,UAIZ,QAEQ,OAAOE,IEpHVwB,EACC,WADDA,EAEO,iBAFPA,EAGI,cCXTC,EAAaD,EAYNE,EATU,WAA8B,IAA7B1B,EAA6BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArBwB,EAAUrB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQC,EAAOC,MACX,IFD6B,wBEEzB,OAAOD,EAAOW,OAClB,QACI,OAAOf,ICJJ2B,cAAgB,CAC7BC,MAAOC,EACPH,+FCHmBI,6MAIjB9B,MAAQ,CACJS,KAAM,MAIVsB,aAAe,SAACC,GACZC,EAAKC,SAAS,CAAEzB,KAAMuB,EAAEG,OAAOC,WAGnCC,aAAe,SAACL,GACZA,EAAEM,iBACF,IAAMC,EAAiBN,EAAKjC,MAAMS,KAAKP,QAAU,GAC3C+B,EAAKjC,MAAMS,KAAK+B,MAAM,EAAG,IAAM,MAC/BP,EAAKjC,MAAMS,KACjBwB,EAAKQ,MAAMC,cAAcH,GACzBN,EAAKC,SAAS,CAAEzB,KAAM,8EAItB,OACIkC,EAAAC,EAAAC,cAAA,QAAMC,SAAUC,KAAKV,aAAcW,UAAU,eACzCL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAAA,SAAOK,QAAQ,SACfP,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACIE,MAAO,CAAEC,OAAQ,SAAUC,gBAAiB,QAC5CjB,MAAOW,KAAK/C,MAAMS,KAClB6C,SAAUP,KAAKhB,aACfzB,GAAG,eACHiD,YAAY,kBACZC,UAAQ,KAGhBb,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACI5C,KAAK,SACL+C,OAAO,SACP9C,GAAG,eACHmD,MAAM,WAENd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CAAKO,MAAO,CAAEQ,YAAa,SAC1B,IAPL,sBAtCiBC,qBCqG1BC,6MAvFX7D,MAAQ,CACJ8D,QAAS7B,EAAKQ,MAAMvB,KAAKT,QAG7BsD,kBAAoB,kBAAMC,OAAOC,iBAAiB,QAAShC,EAAKiC,gBAEhEA,YAAc,SAAAC,GAEM,WAAZA,EAAGC,MACHnC,EAAKQ,MAAM4B,iBAAiBF,MAIpCpC,aAAe,SAAAC,GACXC,EAAKC,SAAS,CAAE4B,QAAS9B,EAAEG,OAAOC,WAGtCkC,uBAAyB,SAAAH,GACrBA,EAAG7B,iBAEH,IAAMC,EAAiBN,EAAKjC,MAAM8D,QAAQ5D,QAAU,GAC9C+B,EAAKjC,MAAM8D,QAAQtB,MAAM,EAAG,IAAM,MAClCP,EAAKjC,MAAM8D,QAMjB,OALA7B,EAAKQ,MAAM8B,eAAX5D,OAAAC,EAAA,EAAAD,CAAA,GACOsB,EAAKQ,MAAMvB,KADlB,CAEIT,KAAM8B,KAGHN,EAAKC,SAAS,CAAE4B,QAAS,8EAIhC,OACInB,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACIuB,IAAKzB,KAAK/C,MAAM8D,QAChBd,UAAU,WACVG,MAAO,CAAEC,OAAQ,OAAQC,gBAAiB,YAAaoB,aAAc,QAErE9B,EAAAC,EAAAC,cAAA,QAAMC,SAAUC,KAAKuB,wBACjB3B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACXG,MAAO,CAAEuB,WAAY,SAErB/B,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAWD,UAAU,OACjBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,4BACAN,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACIE,MAAO,CAAEwB,aAAc,MAAOC,MAAO,SACrCC,KAAK,YACLzC,MAAOW,KAAK/C,MAAM8D,QAClBR,SAAUP,KAAKhB,aACfzB,GAAG,aACHwE,WAAS,EACTtB,UAAQ,KAGf,IACDb,EAAAC,EAAAC,cAAA,OAAKM,MAAO,GAAIH,UAAU,YACtBL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACIE,MAAO,CAAEQ,YAAa,QACtBoB,QAAQ,YACR1E,KAAK,SACL2C,UAAU,gBACVgC,UAAWjC,KAAK/C,MAAM8D,SAEtBnB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACI9B,MAAO,CAAEuB,WAAY,IAAKQ,SAAU,IACpCzB,MAAM,aAGdd,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACI8B,QAAQ,YACR/B,UAAU,iBACVmC,QAASpC,KAAKN,MAAM4B,kBAGpB1B,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACI9B,MAAO,CAAEuB,WAAY,IAAKQ,SAAU,IACpCzB,MAAM,wBAnFnBG,aC2BRwB,EA5BE,SAAA3C,GAAK,OAElBE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACI8B,QAAQ,YACR5B,MAAO,CAAEQ,YAAa,SAEtBhB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACIjC,UAAU,aACVmC,QAAS,kBAAM1C,EAAM4C,qBAAqB5C,EAAMnC,KAChD6C,MAAO,CAAE+B,SAAU,OAG3BvC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACI8B,QAAQ,aACRpC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CACIjC,UAAU,eACVG,MAAO,CAAEuB,WAAY,IAAKQ,SAAU,IACpCH,QAAQ,YACRtB,MAAM,UACN0B,QAAS,kBAAM1C,EAAM6C,iBAAiB7C,EAAMnC,UC1BvC8E,6MAQjBpF,MAAQ,CACJuF,gBAAgB,KAGpBC,kBAAoB,SAAAC,GACZxD,EAAKjC,MAAMuF,iBAAmBE,GAC9BxD,EAAKC,SAAS,CAAEqD,eAAgBE,6EAI/B,IAAAC,EAAA3C,KACL,OACIJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACI0C,aAAc,kBAAMD,EAAKF,mBAAkB,IAC3CI,aAAc,kBAAMF,EAAKF,mBAAkB,IAC3ClF,GAAIyC,KAAKN,MAAMvB,KAAKZ,GACpBkE,IAAKzB,KAAKN,MAAMvB,KAAKZ,GACrB6C,MAAO,CAAEC,OAAQ,OAAQC,gBAAiB,YAAaoB,aAAc,OACrEzB,UAAU,WACVL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACIK,SAAU,kBAAMoC,EAAKjD,MAAMoD,iBAAiBH,EAAKjD,MAAMvB,KAAKZ,KAC5DA,GAAG,eACH6C,MAAO,CAAEE,gBAAiB,oBAC1BI,MAAM,UAAUlC,QAASwB,KAAKN,MAAMvB,KAAKR,cAE5C,IACDiC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACI6C,QAAS/C,KAAKN,MAAMvB,KAAKT,KACzB0C,MAAO,CACH4C,eAAgBhD,KAAKN,MAAMvB,KAAKR,YAAc,eAAiB,OAC/DsF,QAASjD,KAAKN,MAAMvB,KAAKR,YAAc,KAAO,OAGrD,KAC+B,IAA9BqC,KAAK/C,MAAMuF,eACT5C,EAAAC,EAAAC,cAACoD,EAAD,CACI3F,GAAIyC,KAAKN,MAAMvB,KAAKZ,GACpBgF,iBAAkBvC,KAAKN,MAAM6C,iBAC7BD,qBAAsBtC,KAAKN,MAAM4C,uBAEnC,aAhDgBzB,8BCyCvBsC,6MAnCbC,UAAY,WAGV,OAFqBlE,EAAKQ,MAAM3C,MAAMiB,OAAO,SAAAG,GAAI,OAAyB,IAArBA,EAAKR,cAEzCR,QAAU,EAEvByC,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CACEI,UAAU,cACVG,MAAO,CAAEuB,WAAY,OAAQrB,gBAAiB,aAC9C0B,QAAQ,YACRtB,MAAM,UACN0B,QAAS,kBAAMlD,EAAKQ,MAAM4D,oBAAmB,IAC7C/F,GAAG,eANL,8BAYF,2EAOF,OACEqC,EAAAC,EAAAC,cAAA,OAAKM,MAAO,IACTJ,KAAKoD,oBA5BYvC,aCYX0C,EAjBF,SAAAtF,GAAA,IAAGuF,EAAHvF,EAAGuF,OAAQC,EAAXxF,EAAWwF,SAAUrB,EAArBnE,EAAqBmE,QAArB,OACTxC,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CACImC,QAAQ,YACRI,QAASA,EACTH,SAAUuB,EACVpD,MAAO,CAAEuB,WAAY,SAEpB8B,ICCMC,cARS,SAACzG,EAAO0G,GAAR,MAAsB,CAC1CH,OAAQG,EAAS3F,SAAWf,EAAM0B,mBAGX,SAACiF,EAAUD,GAAX,MAAyB,CAChDvB,QAAS,kBAAMwB,ET4C2B,CAC1CtG,KDhDiC,wBCiDjCU,OS9C4C2F,EAAS3F,YAG1C0F,CAGbH,GCIaM,EAfC,kBACZjE,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEC,OAAQ,SAClBT,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACgE,EAAD,CAAY9F,OAAQS,GAApB,OAGAmB,EAAAC,EAAAC,cAACgE,EAAD,CAAY9F,OAAQS,GAApB,UAGAmB,EAAAC,EAAAC,cAACgE,EAAD,CAAY9F,OAAQS,GAApB,eCJasF,mLAoBR,IAAA7E,EAAAc,KAEL,OACIJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACXL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkE,EAAD,CAAMrE,cAAeK,KAAKN,MAAMC,iBAEpCC,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,MAAO,CAAEyB,MAAO,QAASxB,OAAQ,WACnCT,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAE6D,OAAQ,SAClBrE,EAAAC,EAAAC,cAACoE,EAAD,MACAtE,EAAAC,EAAAC,cAACqE,EAAD,CACIb,mBAAoBtD,KAAKN,MAAM4D,mBAC/BvG,MAAOiD,KAAKN,MAAM3C,SAG1B6C,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACVD,KAAKN,MAAM3C,MAAMmB,IAAI,SAACC,GAAD,OAClByB,EAAAC,EAAAC,cAAA,OAAK2B,IAAKtD,EAAKZ,IAEP2B,EAAKQ,MAAMpB,YAAYf,KAAOY,EAAKZ,GAC/BqC,EAAAC,EAAAC,cAACsE,EAAD,CACIjG,KAAMe,EAAKQ,MAAMpB,YACjBkD,eAAgBtC,EAAKQ,MAAM8B,eAC3BF,iBAAkBpC,EAAKQ,MAAM4B,mBAGhC1B,EAAAC,EAAAC,cAACuE,EAAD,CACGlG,KAAMA,EACNoE,iBAAkBrD,EAAKQ,MAAM6C,iBAC7BD,qBAAsBpD,EAAKQ,MAAM4C,qBACjCQ,iBAAkB5D,EAAKQ,MAAMoD,gCAlDpCjC,aAAhBkD,EAiBVO,aAAe,CAClBhG,YAAa,ICxBrB,IAAMiG,EAAkB,SAACxH,EAAOiB,GAE5B,OAAQA,GACJ,IAAK,WACD,OAAOjB,EACX,IAAK,iBACD,OAAOA,EAAMiB,OAAO,SAAAwG,GAAC,OAAIA,EAAE7G,cAC/B,IAAK,cACD,OAAOZ,EAAMiB,OAAO,SAAAwG,GAAC,OAAKA,EAAE7G,cAChC,QACI,MAAM,IAAI8G,MAAM,mBAAqBzG,KAQlC0F,cAJS,SAAAzG,GAAK,MAAK,CAC9BF,MAAOwH,EAAgBtH,EAAM4B,MAAM9B,MAAOE,EAAM0B,oBAGrC+E,CAEbK,GClBIW,EAAS,CACXC,UAAW,SACXC,WAAY,OACZC,SAAU,WACVC,OAAQ,EACRpD,aAAc,EACdqD,OAAQ,EACRrE,MAAO,QACPuD,OAAQ,IACRpC,MAAO,OACPmD,UAAW,yCAeAC,EATG,SAAAvF,GAAK,OAEnBE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACXL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQD,UAAU,SAASG,MAAO,CAAEE,gBAAiB,OAAQI,MAAO,UAApE,aACAd,EAAAC,EAAAC,cAACoF,EAAoBxF,GACrBE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAQD,UAAU,SAASkF,MAAM,EAAM/E,MAAOsE,GAA9C,6CCDFU,6MAEFzF,cAAgB,SAAA0F,GAAS,OAAInG,EAAKQ,MAAMC,cAAc0F,MACtD9C,iBAAmB,SAAA+C,GAAc,OAAIpG,EAAKQ,MAAM6C,iBAAiB+C,MACjExC,iBAAmB,SAAAyC,GAAY,OAAIrG,EAAKQ,MAAMoD,iBAAiByC,MAC/DjD,qBAAuB,SAAA/E,GAAE,OAAI2B,EAAKQ,MAAM4C,qBAAqB/E,MAC7DiE,eAAiB,SAAA+D,GAAY,OAAIrG,EAAKQ,MAAM8B,eAAe+D,MAC3DjE,iBAAmB,SAAAgE,GAAc,OAAIpG,EAAKQ,MAAM4B,iBAAiBgE,MACjEhC,mBAAqB,SAAAgC,GAAc,OAAIpG,EAAKQ,MAAM4D,mBAAmBgC,4EAGjE,OAAO1F,EAAAC,EAAAC,cAAC0F,EAAcxF,KAAKN,cAXjBmB,aAoBZ4E,EAAqB,CACvB9F,cd7BmB,SAAAjC,GAAI,MAAK,CAC5BJ,KDnBoB,WCoBpBI,Sc4BA6E,iBdzBsB,SAAAhF,GAAE,MAAK,CAC7BD,KDvBuB,cCwBvBC,OcwBAuF,iBdrBsB,SAAAvF,GAAE,MAAK,CAC7BD,KD3BuB,cC4BvBC,OcoBA+E,qBdhBoB,SAAA/E,GAAE,MAAK,CAC3BD,KDhCqB,YCiCrBC,OceAiE,edZoB,SAAAjD,GAAY,MAAK,CACrCjB,KDpC4B,mBCqC5BiB,iBcWA+C,iBdRsB,iBAAO,CAC7BhE,KDxC4B,mBCyC5BoI,QAAS,KcOTpC,mBdJwB,SAAA9E,GAAO,MAAK,CACpClB,KD5C2B,kBC6C3BkB,acOWkF,cAjBS,SAAAzG,GAAK,MAAK,CAC9BF,MAAOE,EAAM4B,MAAM9B,MACnBuB,YAAarB,EAAM4B,MAAMP,cAiBzBmH,EAFW/B,CAGb0B,GCnDIO,mBCVmB,WACrB,IACI,IAAMC,EAAkBC,aAAaC,QAAQ,SAC7C,GAAwB,OAApBF,EACA,OAEJ,OAAOG,KAAKC,MAAMJ,GACpB,MAAOK,GACL,QDEeC,IAEjBC,EAAQC,YACVC,EACAV,EACA1E,OAAOqF,8BAAgCrF,OAAOqF,gCAGlDH,EAAMI,UAAU,YCNS,SAACtJ,GACtB,IACI,IAAM2I,EAAkBG,KAAKS,UAAUvJ,GACvC4I,aAAaY,QAAQ,QAASb,GAChC,MAAOK,GACLS,QAAQC,IAAIV,IDEhBW,CAAU,CACN/H,MAAOsH,EAAMU,WAAWhI,UAIhCiI,IAASC,OACLnH,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAAUb,MAAOA,GACbvG,EAAAC,EAAAC,cAACmH,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.7938f6b3.chunk.js","sourcesContent":["import uuid from 'uuid';\r\nimport {\r\n    ADD_TODO,\r\n    DELETE_TODO,\r\n    TOGGLE_TODO,\r\n    EDIT_TODO,\r\n    SAVE_EDITED_TODO,\r\n    CANCEL_EDIT_TODO,\r\n    CLEAR_COMPLETED,\r\n} from \"../actions/actionTypes\";\r\n\r\n// const initialState = {\r\n//     items: [{\r\n//         task: 'Todo One',\r\n//         isCompleted: false,\r\n//         id: uuid(),\r\n//     },\r\n//     {\r\n//         task: 'TODO TWO',\r\n//         isCompleted: false,\r\n//         id: uuid(),\r\n//     },\r\n//     {\r\n//         task: 'Todo 3',\r\n//         isCompleted: false,\r\n//         id: uuid(),\r\n//     }\r\n//     ],\r\n// };\r\n\r\nconst INIT_STATE = {\r\n    items: [],\r\n}\r\n\r\nconst todosReducer = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_TODO:\r\n            {\r\n                const id = uuid();\r\n                const todoItem = {\r\n                    task: action.task,\r\n                    id,\r\n                    isCompleted: false,\r\n                };\r\n                return {\r\n                    ...state,\r\n                    items: [...state.items, todoItem]\r\n                }\r\n            }\r\n\r\n        case DELETE_TODO:\r\n            {\r\n                const items = state.items.filter(({\r\n                    id\r\n                }) => id !== action.id);\r\n                return {\r\n                    ...state,\r\n                    items\r\n                };\r\n            }\r\n\r\n        case TOGGLE_TODO:\r\n            {\r\n                const items = state.items.map(item => {\r\n                    if (item.id === action.id) {\r\n                        item.isCompleted = !item.isCompleted\r\n                    }\r\n                    return item;\r\n                })\r\n                return {\r\n                    ...state,\r\n                    items\r\n                };\r\n            }\r\n\r\n        case EDIT_TODO:\r\n            {\r\n                const item = state.items.find(({\r\n                    id\r\n                }) => id === action.id);\r\n                return {\r\n                    ...state,\r\n                    editingTodo: item\r\n                };\r\n            }\r\n\r\n        case SAVE_EDITED_TODO:\r\n            {\r\n                const items = state.items.map(item => {\r\n                    if (item.id === action.modifiedTodo.id) {\r\n                        item.task = action.modifiedTodo.task;\r\n                    }\r\n\r\n                    return item;\r\n                });\r\n\r\n                return {\r\n                    ...state,\r\n                    items,\r\n                    editingTodo: {}\r\n                };\r\n            }\r\n\r\n        case CANCEL_EDIT_TODO:\r\n            {\r\n                const newState = state.items.length ? {\r\n                    ...state,\r\n                    editingTodo: {}\r\n                } : {\r\n                        ...state\r\n                    };\r\n                return newState;\r\n            }\r\n\r\n\r\n        case CLEAR_COMPLETED:\r\n            {\r\n                const items = state.items.filter(item => item.isCompleted !== action.checked)\r\n                return {\r\n                    ...state,\r\n                    items\r\n                }\r\n            }\r\n\r\n        default:\r\n            {\r\n                return state;\r\n            }\r\n    }\r\n};\r\n\r\nexport default todosReducer;","export const ADD_TODO = \"ADD_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\nexport const EDIT_TODO = \"EDIT_TODO\";\r\nexport const SAVE_EDITED_TODO = 'SAVE_EDITED_TODO';\r\nexport const CANCEL_EDIT_TODO = 'CANCEL_EDIT_TODO';\r\nexport const CLEAR_COMPLETED = 'CLEAR_COMPLETED';\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';","import {\r\n    ADD_TODO,\r\n    DELETE_TODO,\r\n    TOGGLE_TODO,\r\n    EDIT_TODO,\r\n    SAVE_EDITED_TODO,\r\n    CANCEL_EDIT_TODO,\r\n    CLEAR_COMPLETED,\r\n    SET_VISIBILITY_FILTER,\r\n} from './actionTypes';\r\n\r\nexport const VisibilityFilters = {\r\n    SHOW_ALL: 'SHOW_ALL',\r\n    SHOW_COMPLETED: 'SHOW_COMPLETED',\r\n    SHOW_ACTIVE: 'SHOW_ACTIVE'\r\n}\r\n\r\n\r\nexport const addTodo = task => ({\r\n    type: ADD_TODO,\r\n    task\r\n});\r\n\r\nexport const deleteTodo = id => ({\r\n    type: DELETE_TODO,\r\n    id\r\n});\r\n\r\nexport const toggleTodo = id => ({\r\n    type: TOGGLE_TODO,\r\n    id\r\n});\r\n\r\n\r\nexport const editTodo = id => ({\r\n    type: EDIT_TODO,\r\n    id\r\n})\r\n\r\nexport const saveEdit = modifiedTodo => ({\r\n    type: SAVE_EDITED_TODO,\r\n    modifiedTodo\r\n})\r\n\r\nexport const cancelEdit = () => ({\r\n    type: CANCEL_EDIT_TODO,\r\n    payload: {},\r\n});\r\n\r\nexport const clearChecked = checked => ({\r\n    type: CLEAR_COMPLETED,\r\n    checked\r\n});\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n    type: SET_VISIBILITY_FILTER,\r\n    filter\r\n})","import { VisibilityFilters } from '../actions/index'\r\nimport { SET_VISIBILITY_FILTER } from '../actions/actionTypes'\r\n\r\nconst { SHOW_ALL } = VisibilityFilters\r\n\r\n\r\nconst visibilityFilter = (state = SHOW_ALL, action) => {\r\n    switch (action.type) {\r\n        case SET_VISIBILITY_FILTER:\r\n            return action.filter\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default visibilityFilter;","import {\r\n  combineReducers\r\n} from 'redux';\r\nimport TodosReducer from './todos'\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\n\r\nexport default combineReducers({\r\n  todos: TodosReducer,\r\n  visibilityFilter\r\n});","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Add from '@material-ui/icons/Add';\r\nimport { FilledInput, FormGroup, Button } from '@material-ui/core/';\r\n\r\n// Form component for user input.\r\nexport default class FormContent extends Component {\r\n    static propTypes = {\r\n        handleAddTodo: PropTypes.func.isRequired,\r\n    };\r\n    state = {\r\n        task: ''\r\n    };\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ task: e.target.value });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const truncatedTask = (this.state.task.length >= 50)\r\n            ? this.state.task.slice(0, 50) + '...'\r\n            : this.state.task;\r\n        this.props.handleAddTodo(truncatedTask);\r\n        this.setState({ task: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit} className='formContent'>\r\n                <div>\r\n                    <FormGroup>\r\n                        <label htmlFor='task'></label>\r\n                        <FilledInput\r\n                            style={{ margin: '0 auto', backgroundColor: 'grey', }}\r\n                            value={this.state.task}\r\n                            onChange={this.handleChange}\r\n                            id='newTaskInput'\r\n                            placeholder='...Enter A Todo'\r\n                            required\r\n                        />\r\n                    </FormGroup>\r\n                    <div>\r\n                        <Button\r\n                            type='submit'\r\n                            margin='normal'\r\n                            id='submitButton'\r\n                            color='inherit'\r\n                        >\r\n                            <Add style={{ marginRight: '4px' }} />\r\n                            {\" \"}\r\n                            Add Todo\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    ListItem,\r\n    FormHelperText,\r\n    FormGroup,\r\n    InputBase,\r\n    Button\r\n} from '@material-ui/core/';\r\nimport { CancelTwoTone, CheckBoxTwoTone } from '@material-ui/icons/';\r\n\r\n\r\n// Component rendered when the edit button is clicked.\r\nclass TodoForm extends Component {\r\n    static propTypes = {\r\n        handleEditCancel: PropTypes.func.isRequired,\r\n        handleSaveEdit: PropTypes.func.isRequired,\r\n        item: PropTypes.object.isRequired,\r\n    };\r\n\r\n    state = {\r\n        todoVal: this.props.item.task,\r\n    }\r\n\r\n    componentDidMount = () => window.addEventListener('keyup', this.handleKeyUp);\r\n\r\n    handleKeyUp = ev => {\r\n        // Add an event listener to return ESCAPE key input\r\n        if (ev.code === 'Escape') {\r\n            this.props.handleEditCancel(ev);\r\n        }\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({ todoVal: e.target.value });\r\n    };\r\n\r\n    handleEditAndResetForm = ev => {\r\n        ev.preventDefault();\r\n        // Truncate to prevent access words outside listitem \r\n        const truncatedTask = (this.state.todoVal.length >= 55)\r\n            ? this.state.todoVal.slice(0, 55) + '...'\r\n            : this.state.todoVal;\r\n        this.props.handleSaveEdit({\r\n            ...this.props.item,\r\n            task: truncatedTask,\r\n        });\r\n\r\n        return this.setState({ todoVal: '' });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <ListItem\r\n                key={this.state.todoVal}\r\n                className='todoForm'\r\n                style={{ margin: '10px', backgroundColor: 'lightgrey', borderRadius: '5px' }}\r\n            >\r\n                <form onSubmit={this.handleEditAndResetForm}>\r\n                    <div className='form-row'\r\n                        style={{ marginLeft: '10px', }}\r\n                    >\r\n                        <FormGroup className='col'>\r\n                            <FormHelperText>Edit Todo or Cancel</FormHelperText>\r\n                            <InputBase\r\n                                style={{ marginBottom: '5px', width: '600px' }}\r\n                                name='edit-item'\r\n                                value={this.state.todoVal}\r\n                                onChange={this.handleChange}\r\n                                id='editedTodo'\r\n                                autoFocus\r\n                                required\r\n                            />\r\n                        </FormGroup>\r\n                        {' '}\r\n                        <div style={{}} className='col-auto'>\r\n                            <Button\r\n                                style={{ marginRight: '10px' }}\r\n                                variant='contained'\r\n                                type='submit'\r\n                                className='todoFomSubmit'\r\n                                disabled={!this.state.todoVal}\r\n                            >\r\n                                <CheckBoxTwoTone\r\n                                    style={{ marginLeft: '0', fontSize: 25 }}\r\n                                    color='inherit'\r\n                                />\r\n                            </Button>\r\n                            <Button\r\n                                variant='contained'\r\n                                className='todoFormCancel'\r\n                                onClick={this.props.handleEditCancel}\r\n\r\n                            >\r\n                                <CancelTwoTone\r\n                                    style={{ marginLeft: '0', fontSize: 25 }}\r\n                                    color='inherit'\r\n                                />\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </ListItem >\r\n        )\r\n    }\r\n};\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '@material-ui/core/';\r\nimport { DeleteForeverTwoTone, EditTwoTone } from '@material-ui/icons/';\r\n\r\n//component to delete and edit todos\r\nconst TodoItemPropTypes = {\r\n    handleSelectEditTodo: PropTypes.func.isRequired,\r\n    handleDeleteTodo: PropTypes.func.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n};\r\n\r\nconst TodoItem = props => (\r\n\r\n    <div className=\"todoButtons\">\r\n        <Button\r\n            variant='contained'\r\n            style={{ marginRight: '10px' }}\r\n        >\r\n            <EditTwoTone\r\n                className='editButton'\r\n                onClick={() => props.handleSelectEditTodo(props.id)}\r\n                style={{ fontSize: 25 }}\r\n            />\r\n        </Button>\r\n        <Button\r\n            variant='contained'>\r\n            <DeleteForeverTwoTone\r\n                className='deleteButton'\r\n                style={{ marginLeft: '0', fontSize: 25 }}\r\n                variant='contained'\r\n                color='inherit'\r\n                onClick={() => props.handleDeleteTodo(props.id)}\r\n            />\r\n        </Button>\r\n    </div>\r\n)\r\n\r\nTodoItem.propTypes = TodoItemPropTypes;\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoButtons from './TodoButtons.jsx';\r\nimport { ListItem, Checkbox, ListItemText } from '@material-ui/core/';\r\n\r\n// Component that renders todo text from user input.\r\nexport default class TodoItem extends Component {\r\n    static propTypes = {\r\n        item: PropTypes.object.isRequired,\r\n        handleTodoToggle: PropTypes.func.isRequired,\r\n        handleDeleteTodo: PropTypes.func.isRequired,\r\n        handleSelectEditTodo: PropTypes.func.isRequired,\r\n    };\r\n\r\n    state = {\r\n        displayButtons: false\r\n    }\r\n\r\n    setDisplayButtons = bool => {\r\n        if (this.state.displayButtons !== bool) {\r\n            this.setState({ displayButtons: bool });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <ListItem\r\n                onMouseEnter={() => this.setDisplayButtons(true)}\r\n                onMouseLeave={() => this.setDisplayButtons(false)}\r\n                id={this.props.item.id}\r\n                key={this.props.item.id}\r\n                style={{ margin: '10px', backgroundColor: 'lightgrey', borderRadius: '5px' }}\r\n                className=\"item-li\">\r\n                <Checkbox\r\n                    onChange={() => this.props.handleTodoToggle(this.props.item.id)}\r\n                    id='todoCheckbox'\r\n                    style={{ backgroundColor: 'rgb(141, 44, 44)' }}\r\n                    color=\"default\" checked={this.props.item.isCompleted}\r\n                />\r\n                {' '}\r\n                <ListItemText\r\n                    primary={this.props.item.task}\r\n                    style={{\r\n                        textDecoration: this.props.item.isCompleted ? 'line-through' : 'none',\r\n                        opacity: this.props.item.isCompleted ? '.3' : '1',\r\n                    }}\r\n                />\r\n                {' '}\r\n                {(this.state.displayButtons === true) ?\r\n                    <TodoButtons\r\n                        id={this.props.item.id}\r\n                        handleDeleteTodo={this.props.handleDeleteTodo}\r\n                        handleSelectEditTodo={this.props.handleSelectEditTodo}\r\n                    />\r\n                    : null\r\n                }\r\n            </ListItem>\r\n        )\r\n    }\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Clear Button that pops up when a todo is toggled to completed.\r\nconst ClearButtonProps = {\r\n  items: PropTypes.array.isRequired,\r\n  handleClearChecked: PropTypes.func.isRequired,\r\n};\r\n\r\nclass ClearButton extends Component {\r\n\r\n  someOrAll = () => {\r\n    const someSelected = this.props.items.filter(item => item.isCompleted === true);\r\n\r\n    if (someSelected.length >= 1) {\r\n      return (\r\n        <Button\r\n          className='clearButton'\r\n          style={{ marginLeft: '10px', backgroundColor: 'lightgrey' }}\r\n          variant='contained'\r\n          color='inherit'\r\n          onClick={() => this.props.handleClearChecked(true)}\r\n          id='clearButton'\r\n        >\r\n          Delete Selected items\r\n      </Button>\r\n      )\r\n    } else {\r\n      return\r\n\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{}}>\r\n        {this.someOrAll()}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nClearButton.propTypes = ClearButtonProps;\r\n\r\nexport default ClearButton;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// Csomponent for visibility buttons. \r\nconst Link = ({ active, children, onClick }) => (\r\n    <Button\r\n        variant='contained'\r\n        onClick={onClick}\r\n        disabled={active}\r\n        style={{ marginLeft: '10px' }}\r\n    >\r\n        {children}\r\n    </Button>\r\n)\r\n\r\nLink.propTypes = {\r\n    active: PropTypes.bool.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n    onClick: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Link","import { connect } from 'react-redux'\r\nimport { setVisibilityFilter } from '../actions'\r\nimport Link from '../component/Link'\r\n\r\n// Container for the visibility filter.\r\nconst mapStateToProps = (state, ownProps) => ({\r\n    active: ownProps.filter === state.visibilityFilter\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n    onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Link)","import React from 'react'\r\nimport FilterLink from '../containers/FilterLink'\r\nimport { VisibilityFilters } from '../actions'\r\n\r\n// Filter component to swap todos visibility state.\r\nconst Filters = () => (\r\n    <div style={{ margin: '10px' }}>\r\n        <span>Show: </span>\r\n        <FilterLink filter={VisibilityFilters.SHOW_ALL}>\r\n            All\r\n        </FilterLink>\r\n        <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\r\n            Active\r\n        </FilterLink>\r\n        <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\r\n            Completed\r\n        </FilterLink>\r\n    </div>\r\n)\r\n\r\nexport default Filters","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Form from './FormContent';\r\nimport TodoForm from './TodoForm';\r\nimport TodoItem from './TodoItem';\r\nimport ClearButton from './ClearSelected'\r\nimport { List } from '@material-ui/core/';\r\nimport Filters from './Filters.jsx'\r\n\r\n// Component for the todo portion of the app.\r\nexport default class TodoApp extends Component {\r\n    static propTypes = {\r\n        items: PropTypes.array.isRequired,\r\n        handleAddTodo: PropTypes.func.isRequired,\r\n        handleDeleteTodo: PropTypes.func.isRequired,\r\n        handleTodoToggle: PropTypes.func.isRequired,\r\n        handleSelectEditTodo: PropTypes.func.isRequired,\r\n        handleSaveEdit: PropTypes.func.isRequired,\r\n        handleEditCancel: PropTypes.func.isRequired,\r\n        handleClearChecked: PropTypes.func.isRequired,\r\n        editingTodo: PropTypes.shape({\r\n            task: PropTypes.string,\r\n            id: PropTypes.string,\r\n            isCompleted: PropTypes.bool,\r\n        }),\r\n    };\r\n\r\n    static defaultProps = {\r\n        editingTodo: {},\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"todoApp\">\r\n                <div>\r\n                    <Form handleAddTodo={this.props.handleAddTodo} />\r\n                </div>\r\n                <List style={{ width: '800px', margin: '0 auto' }}>\r\n                    <div style={{ height: '75px' }}>\r\n                        <Filters />\r\n                        <ClearButton\r\n                            handleClearChecked={this.props.handleClearChecked}\r\n                            items={this.props.items}\r\n                        />\r\n                    </div>\r\n                    <div className='todoList'>\r\n                        {this.props.items.map((item) => (\r\n                            <div key={item.id}>\r\n                                {\r\n                                    this.props.editingTodo.id === item.id ? (\r\n                                        <TodoForm\r\n                                            item={this.props.editingTodo}\r\n                                            handleSaveEdit={this.props.handleSaveEdit}\r\n                                            handleEditCancel={this.props.handleEditCancel}\r\n                                        />)\r\n                                        :\r\n                                        (<TodoItem\r\n                                            item={item}\r\n                                            handleDeleteTodo={this.props.handleDeleteTodo}\r\n                                            handleSelectEditTodo={this.props.handleSelectEditTodo}\r\n                                            handleTodoToggle={this.props.handleTodoToggle}\r\n                                        />)\r\n                                }\r\n                            </div>\r\n                        ))\r\n                        }\r\n                    </div>\r\n                </List>\r\n            </div>\r\n        )\r\n    }\r\n}","import { connect } from 'react-redux';\r\nimport TodoApp from '../component/TodoApp';\r\n\r\n// Container for the Redux visibility filter.\r\nconst getVisibleTodos = (items, filter) => {\r\n\r\n    switch (filter) {\r\n        case 'SHOW_ALL':\r\n            return items\r\n        case 'SHOW_COMPLETED':\r\n            return items.filter(t => t.isCompleted)\r\n        case 'SHOW_ACTIVE':\r\n            return items.filter(t => !t.isCompleted)\r\n        default:\r\n            throw new Error('Unknown filter: ' + filter)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    items: getVisibleTodos(state.todos.items, state.visibilityFilter)\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(TodoApp)","import React from 'react';\r\nimport './App.css';\r\nimport { AppBar, Popper } from '@material-ui/core/';\r\nimport VisibleTodoList from '../containers/VisibleTodoList'\r\n\r\n// Component wrapper for the whole app.\r\nconst styles = {\r\n    textAlign: 'center',\r\n    background: 'grey',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    borderRadius: 3,\r\n    border: 0,\r\n    color: 'black',\r\n    height: 125,\r\n    width: '100%',\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n};\r\n\r\n\r\n\r\n\r\nconst AppLayout = props => (\r\n\r\n    <div className=\"App\">\r\n        <AppBar className='appBar' style={{ backgroundColor: 'grey', color: 'black' }}> TodoApp </AppBar>\r\n        <VisibleTodoList {...props} />\r\n        <Popper className='footer' open={true} style={styles}>Made with React, Redux and material-ui.</Popper>\r\n    </div>\r\n)\r\n\r\nexport default AppLayout;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AppLayout from '../component/App';\r\nimport {\r\n    addTodo,\r\n    deleteTodo,\r\n    toggleTodo,\r\n    editTodo,\r\n    saveEdit,\r\n    cancelEdit,\r\n    clearChecked,\r\n} from '../actions/index';\r\n\r\n// Container for the majority of the Redux state.\r\nconst appPropTypes = {\r\n    handleAddTodo: PropTypes.func.isRequired,\r\n    handleDeleteTodo: PropTypes.func.isRequired,\r\n    handleTodoToggle: PropTypes.func.isRequired,\r\n    handleSelectEditTodo: PropTypes.func.isRequired,\r\n    handleSaveEdit: PropTypes.func.isRequired,\r\n    handleEditCancel: PropTypes.func.isRequired,\r\n    handleClearChecked: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nclass App extends Component {\r\n\r\n    handleAddTodo = itemValue => this.props.handleAddTodo(itemValue);\r\n    handleDeleteTodo = selectedItemId => this.props.handleDeleteTodo(selectedItemId);\r\n    handleTodoToggle = modifiedItem => this.props.handleTodoToggle(modifiedItem);\r\n    handleSelectEditTodo = id => this.props.handleSelectEditTodo(id);\r\n    handleSaveEdit = modifiedItem => this.props.handleSaveEdit(modifiedItem);\r\n    handleEditCancel = selectedItemId => this.props.handleEditCancel(selectedItemId);\r\n    handleClearChecked = selectedItemId => this.props.handleClearChecked(selectedItemId);\r\n\r\n    render() {\r\n        return <AppLayout {...this.props} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    items: state.todos.items,\r\n    editingTodo: state.todos.editingTodo,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    handleAddTodo: addTodo,\r\n    handleDeleteTodo: deleteTodo,\r\n    handleTodoToggle: toggleTodo,\r\n    handleSelectEditTodo: editTodo,\r\n    handleSaveEdit: saveEdit,\r\n    handleEditCancel: cancelEdit,\r\n    handleClearChecked: clearChecked,\r\n};\r\n\r\nApp.propTypes = appPropTypes;\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers';\r\nimport App from './containers/App';\r\nimport { loadState, saveState } from './localStorage'\r\nimport './index.css';\r\nimport 'typeface-roboto';\r\n\r\nconst persistedState = loadState();\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nstore.subscribe(() => {\r\n    saveState({\r\n        todos: store.getState().todos\r\n    });\r\n})\r\n\r\nReactDOM.render(\r\n    <Provider store={store} >\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);","export const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n"],"sourceRoot":""}